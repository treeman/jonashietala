---toml
title = "Why Kubernetes at home?"
tags = ["Kubernetes", "Homelab"]
series = "kubernetes"
---

::: epigraph
> If you’re part of a small team, Kubernetes probably isn’t for you: it’s a lot of pain with very little benefits.
> ^ ["Let’s use Kubernetes!" Now you have 8 problems](https://pythonspeed.com/articles/dont-need-kubernetes/)

> I am a solo developer (full stack, but primarily frontend), and Kubernetes has been a game changer for me. I could never run a scalable service on the cloud without Kubernetes.
> ^ [flowerlad on Hacker News](https://news.ycombinator.com/item?id=22494422)
:::

What do you do when you come across something that you know nothing about
that have camps of people with strong (and opposing) viewpoints?

I guess you have a choice to make:

1. Ignore it
1. Explore it

I did not want to slip into yet another time wasting side-project
but here I am, trying to figure out why some loath Kubernetes with a passion
and others preach like it's the second coming of Jesus.

> If a thing is worth doing, it is worth doing badly.
> ^ G.K. Chesterton

# Reasons to play with Kubernetes at home

Here are some of the things I tell myself when I start to worry that I'm wasting time:

1. I might end up with something useful in the end.

  While I've mostly been happy with my one server running a docker compose script for the services I want,
  the server is a big single point of failure.

  It's happened multiple times where it hasn't rebooted properly after a power outage
  or where I've updated something and screwed up, leading to all my home automations to stop functioning.
  This is _especially_ bad as some of our house depends on them (such as the kitchen speakers and some light switches)...

  My hope is that I can use Kubernetes to introduce some redundancy into my setup.

2. I should form my opinions from experience rather than social media commentary.

  It's easy to get affected when you read comments like:

  > After having just spend most of the day yesterday trying to nurse a failing Kubernetes cluster back to health (taking down all of our production websites in the process), I’ve come to completely loathe it.
  > ^ [Apocalypse_666 on Hacker News](https://news.ycombinator.com/item?id=21023917)

   > Maybe it's because I adopted early and have grown with the technology it all just makes sense? It's not that complicated if you limit yourself to the core stuff. Maybe I need to write a book like "Kubernetes for Greybeards" or something like that.
   > ^ [voidfunc on Hacker News](https://news.ycombinator.com/item?id=42253337)

  But copying the feelings of a person you know nothing about only recreates the so-called
  "5 Monkeys Experiment" where (allegedly) monkeys copy the behaviour of their peers without understanding
  why they behaved that way.

  If you try things yourself then you have a much better base to form an informed opinion.

2. I can broaden my skillset

  DevOps is an area where I'm not that comfortable
  but DevOps knowledge is also very useful, especially in a homelab or web application context.

2. Tinkering and building things is fun

  I simply like to tinker and build things.
  I've recently found a renewed satisfaction of self-hosting different services
  and setting up a Kubernetes cluster fits great there.



<https://iamsafts.com/posts/homelab-intro/>

Price wise it probably would've been a smarter choice to play around with Kubernetes in the Proxmox server I already have running, or maybe to base it on a few mini-PCs.
But I figured that I wanted to try out Kubernetes for _real_ with a bunch of real computers and I

I decided to build my Kubernetes cluster using six Raspberry Pi 5s.
